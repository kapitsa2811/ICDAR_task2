nohup: ignoring input
/home/sjhbxs/anaconda3/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
###########################################################
SparseTensor(indices=Tensor("BLSTM/Placeholder_2:0", shape=(?, ?), dtype=int64), values=Tensor("BLSTM/Placeholder_1:0", shape=(?,), dtype=int32), dense_shape=Tensor("BLSTM/Placeholder:0", shape=(?,), dtype=int64))
Tensor("transpose:0", shape=(?, ?, 102), dtype=float32)
Tensor("BLSTM/Placeholder_3:0", shape=(?,), dtype=int32)
loading train data, please wait--------------------- end= 
len is 0 or too long 1101121
len is 0 or too long 1067138
len is 0 or too long 1085492
len is 0 or too long 1080026
len is 0 or too long 1148610
len is 0 or too long 1161134
len is 0 or too long 1091637
len is 0 or too long 1234345
len is 0 or too long 1157057
len is 0 or too long 1078701
len is 0 or too long 1199831
len is 0 or too long 1124130
***************get image:  42606
loading validation data, please wait--------------------- end= 
len is 0 or too long 1091637
***************get image:  301
2018-05-09 09:41:03.885058: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
2018-05-09 09:41:03.885112: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2018-05-09 09:41:03.885120: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.
2018-05-09 09:41:03.885127: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.
2018-05-09 09:41:03.885133: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.
2018-05-09 09:41:03.980556: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2018-05-09 09:41:03.980915: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 0 with properties: 
name: Tesla K80
major: 3 minor: 7 memoryClockRate (GHz) 0.8235
pciBusID 0000:00:04.0
Total memory: 11.17GiB
Free memory: 11.08GiB
2018-05-09 09:41:03.980937: I tensorflow/core/common_runtime/gpu/gpu_device.cc:961] DMA: 0 
2018-05-09 09:41:03.980945: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   Y 
2018-05-09 09:41:03.980973: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:04.0)
restore is true
restore from the checkpoint/home/sjhbxs/checkout/ICDAR_task2/ICDAR_TASK2_new6/checkpoint/ocr-model-7600
=============================begin training=============================
2018-05-09 09:41:17.613308: I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 4573 get requests, put_count=3081 evicted_count=1000 eviction_rate=0.32457 and unsatisfied allocation rate=0.566805
2018-05-09 09:41:17.613370: I tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 100 to 110
2018-05-09 09:41:29.036993: I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 421 get requests, put_count=1434 evicted_count=1000 eviction_rate=0.69735 and unsatisfied allocation rate=0.0023753
2018-05-09 09:41:29.037061: I tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 160 to 176
2018-05-09 09:41:35.472233: I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 652 get requests, put_count=1676 evicted_count=1000 eviction_rate=0.596659 and unsatisfied allocation rate=0.00153374
2018-05-09 09:41:43.418256: I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 5274 get requests, put_count=5128 evicted_count=2000 eviction_rate=0.390016 and unsatisfied allocation rate=0.413917
2018-05-09 09:41:43.418339: I tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 409 to 449
2018-05-09 09:41:51.453546: I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 5359 get requests, put_count=5479 evicted_count=2000 eviction_rate=0.36503 and unsatisfied allocation rate=0.361821
2018-05-09 09:41:51.453628: I tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 655 to 720
2018-05-09 09:42:01.177530: I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 4902 get requests, put_count=4569 evicted_count=1000 eviction_rate=0.218866 and unsatisfied allocation rate=0.29335
2018-05-09 09:42:01.177594: I tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 1158 to 1273
cur_epoch==== 0 cur_batch---- 99 g_step**** 7699 cost 23.275291
cur_epoch==== 1 cur_batch---- 99 g_step**** 7865 cost 23.895477
save checkpoint 8000
seq   0: origin: [21, 18, 25, 18] decoded:[67, 79, 83]
seq   1: origin: [38, 45, 38, 36, 53, 51, 42, 36] decoded:[36, 79, 69]
seq   2: origin: [38, 34, 40, 45, 38] decoded:[67, 65, 69]
seq   3: origin: [56, 34, 52, 41, 42, 47, 40, 53, 48, 47] decoded:[67, 65, 69]
seq   4: origin: [49, 82, 79, 74, 69, 67, 84] decoded:[36, 65, 69]
seq   5: origin: [36, 48, 48, 44, 42, 38, 52] decoded:[67, 79, 83]
seq   6: origin: [37, 69, 82, 80, 69, 82] decoded:[67, 79, 69]
seq   7: origin: [83, 87, 73, 78, 76, 76, 69] decoded:[52, 65, 83]
seq   8: origin: [56, 42, 45, 45] decoded:[36, 65, 69]
seq   9: origin: [73, 78, 84, 69, 82, 70, 65, 67, 69, 83] decoded:[67, 65, 83]
seq  10: origin: [48, 47, 38, 34, 45] decoded:[83, 79, 83]
seq  11: origin: [67, 79, 77, 80, 65, 78, 89] decoded:[36, 65, 69]
seq  12: origin: [37, 51, 42, 47, 44] decoded:[67, 79, 65, 69]
seq  13: origin: [51, 38, 52, 53, 34, 54, 51, 34, 47, 53] decoded:[36, 79, 83]
seq  14: origin: [36, 48, 52, 36, 48] decoded:[67, 79, 83, 83]
seq  15: origin: [43, 48, 51, 53, 48, 55, 48, 57] decoded:[36, 65, 69]
seq  16: origin: [39, 48, 42, 45] decoded:[67, 79, 69]
seq  17: origin: [46, 69, 88, 73, 67, 79] decoded:[67, 65, 83]
5/9 9:52:27  step===8000, Epoch 3/1000, accuracy = 0.000,avg_train_cost = 23.329, lastbatch_err = 0.930, time = 117.460,lr=0.00922745

cur_epoch==== 2 cur_batch---- 99 g_step**** 8031 cost 23.968536
cur_epoch==== 3 cur_batch---- 99 g_step**** 8197 cost 22.605722
cur_epoch==== 4 cur_batch---- 99 g_step**** 8363 cost 24.312138
save checkpoint 8400
cur_epoch==== 5 cur_batch---- 99 g_step**** 8529 cost 22.723976
cur_epoch==== 6 cur_batch---- 99 g_step**** 8695 cost 22.821894
